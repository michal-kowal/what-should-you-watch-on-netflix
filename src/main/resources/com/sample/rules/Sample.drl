package com.sample.rules
 
import com.sample.DroolsTest;
import com.sample.Gui;
import java.util.ArrayList;
import java.io.FileReader;
import java.io.IOException;
import java.util.Map;
import java.util.HashMap;
import java.io.BufferedReader;

declare Question
    question: String
    answersList: ArrayList
    answer: String
end

declare QuestionMap
    key: String
    val: String
end

declare AnswerMap
    key: String
    val: String
end

rule "Init"
when
then
    BufferedReader questionReader = new BufferedReader(new FileReader("questions.txt"));
    BufferedReader answerReader = new BufferedReader(new FileReader("answers.txt"));
    BufferedReader questionAnswerReader = new BufferedReader(new FileReader("messages.txt"));

    String qLine;
    while ((qLine = questionReader.readLine()) != null) {
        String[] parts = qLine.split(";");
        String key = parts[0].trim();
        String value = parts[1].trim();
        insert(new QuestionMap(key, value));
    }

    String aLine;
    while ((aLine = answerReader.readLine()) != null) {
        String[] parts = aLine.split(";");
        String key = parts[0].trim();
        String value = parts[1].trim();
        insert(new AnswerMap(key, value));
    }

    while ((qLine = questionAnswerReader.readLine()) != null) {
        String[] parts = qLine.split(";");
        String q = parts[0].trim();
        int value = Integer.parseInt(parts[1].trim()) + 2;
        ArrayList<String> answersList = new ArrayList<>();
        for (int i = 2; i < value; i++) {
            answersList.add(parts[i].trim());
        }
        insert(new Question(q, answersList, null));
    }

    questionReader.close();
    answerReader.close();
    questionAnswerReader.close();
end

rule "Comedy or drama"
when
    q: Question(question == "DRAMA_OR_COMEDY", $list: answersList, answer == null)
    c: QuestionMap(key == "DRAMA_OR_COMEDY", $val: val)
then
    String questionText = $val;
    Gui gui = new Gui(questionText, $list);
    String result = gui.displayQuestion();
    modify(q) {
        setAnswer(result);
    }
end

rule "Comedy"
when
	exists Question(question==(String) messagesMap.get("QUESTION_DRAMA_OR_COMEDY"),answer==(String) messagesMap.get("ANSWER_COMEDY"));
then
	String question = "Do you like your characters to have questionable morals";
    ArrayList<String> answersList = new ArrayList();
    answersList.add("yes");
    answersList.add("no");
    Gui gui = new Gui(question, answersList);
    String result = gui.displayQuestion();
    insert(new Question(question, answersList, result));
end

rule "Comedy"
when
	exists Question(question==(String) messagesMap.get("QUESTION_DRAMA_OR_COMEDY"),answer==(String) messagesMap.get("ANSWER_COMEDY"));
then
	String question = "Do you like your characters to have questionable morals";
    ArrayList<String> answersList = new ArrayList();
    answersList.add("yes");
    answersList.add("no");
    Gui gui = new Gui(question, answersList);
    String result = gui.displayQuestion();
    insert(new Question(question, answersList, result));
end

rule "no morals"
when
	exists Question(question=="Do you like your characters to have questionable morals", answer=="no");
then
	String question = "Do you like strong female characters";
    ArrayList<String> answersList = new ArrayList();
    answersList.add("yes");
    answersList.add("no");
    Gui gui = new Gui(question, answersList);
    String result = gui.displayQuestion();
    insert(new Question(question, answersList, result));
end

rule "strong female characters"
when
	exists Question(question=="Do you like strong female characters", answer=="yes");
then
	String question = "Do you like them to sell drugs";
    ArrayList<String> answersList = new ArrayList();
    answersList.add("yes");
    answersList.add("no");
    Gui gui = new Gui(question, answersList);
    String result = gui.displayQuestion();
    insert(new Question(question, answersList, result));
end

rule "strong female sells drugs"
when
	exists Question(question=="Do you like them to sell drugs", answer=="yes");
then
	Gui gui = new Gui("Your result is: WEEDS", new ArrayList<String>());
	gui.displayQuestion();
end

rule "no strong female sells drugs"
when
	exists Question(question=="Do you like them to sell drugs", answer=="no");
then
	String question = "Tina Fey or Amy Poehler";
    ArrayList<String> answersList = new ArrayList();
    answersList.add("Tina");
    answersList.add("Amy");
    Gui gui = new Gui(question, answersList);
    String result = gui.displayQuestion();
    insert(new Question(question, answersList, result));
end

rule "amy"
when
	exists Question(question=="Tina Fey or Amy Poehler", answer=="Amy");
then
	Gui gui = new Gui("Your result is: PARKS & RECREATION", new ArrayList<String>());
	gui.displayQuestion();
end

rule "tina"
when
	exists Question(question=="Tina Fey or Amy Poehler", answer=="Tina");
then
	Gui gui = new Gui("Your result is: 30 ROCKS", new ArrayList<String>());
	gui.displayQuestion();
end

rule "no strong female characters"
when
	exists Question(question=="Do you like strong female characters", answer=="no");
then
	String question = "Work place humor";
    ArrayList<String> answersList = new ArrayList();
    answersList.add("yes");
    answersList.add("no");
    Gui gui = new Gui(question, answersList);
    String result = gui.displayQuestion();
    insert(new Question(question, answersList, result));
end

rule "work place humor"
when
	exists Question(question=="Work place humor", answer=="yes");
then
	Gui gui = new Gui("Your result is: THE OFFICE", new ArrayList<String>());
	gui.displayQuestion();
end

rule "no work place humor"
when
	exists Question(question=="Work place humor", answer=="no");
then
	String question = "Want to see James Franco & Seth Rogen as high schoolers";
    ArrayList<String> answersList = new ArrayList();
    answersList.add("yes");
    answersList.add("no");
    Gui gui = new Gui(question, answersList);
    String result = gui.displayQuestion();
    insert(new Question(question, answersList, result));
end

rule "Want to see James Franco"
when
	exists Question(question=="Want to see James Franco & Seth Rogen as high schoolers", answer=="yes");
then
	Gui gui = new Gui("Your result is: FREAKS & GEEKS", new ArrayList<String>());
	gui.displayQuestion();
end

rule "no Want to see James Franco"
when
	exists Question(question=="Want to see James Franco & Seth Rogen as high schoolers", answer=="no");
then
	String question = "Do you want your NYC friends to hang out at a bar or cafe";
    ArrayList<String> answersList = new ArrayList();
    answersList.add("bar");
    answersList.add("cafe");
    Gui gui = new Gui(question, answersList);
    String result = gui.displayQuestion();
    insert(new Question(question, answersList, result));
end


rule "bar"
when
	exists Question(question=="Do you want your NYC friends to hang out at a bar or cafe", answer=="bar");
then
	Gui gui = new Gui("Your result is: HOW I MET YOUR MOTHER", new ArrayList<String>());
	gui.displayQuestion();
end

rule "cafe"
when
	exists Question(question=="Do you want your NYC friends to hang out at a bar or cafe", answer=="cafe");
then
	Gui gui = new Gui("Your result is: FRIENDS", new ArrayList<String>());
	gui.displayQuestion();
end

rule "morals"
when
	exists Question(question=="Do you like your characters to have questionable morals", answer=="yes");
then
	String question = "Friend group or dysfunctional family";
    ArrayList<String> answersList = new ArrayList();
    answersList.add("friends");
    answersList.add("family");
    Gui gui = new Gui(question, answersList);
    String result = gui.displayQuestion();
    insert(new Question(question, answersList, result));
end

rule "friends"
when
	exists Question(question=="Friend group or dysfunctional family", answer=="friends");
then
	Gui gui = new Gui("Your result is: IT'S ALWAYS SUNNY IN PHILADELPHIA", new ArrayList<String>());
	gui.displayQuestion();
end

rule "family"
when
	exists Question(question=="Friend group or dysfunctional family", answer=="family");
then
	Gui gui = new Gui("Your result is: ARRESTED DEVELOPMENT", new ArrayList<String>());
	gui.displayQuestion();
end